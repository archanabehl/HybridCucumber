<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-10-18T09:58:50 EDT" name="Suite" finished-at="2020-10-18T09:59:00 EDT" duration-ms="10506">
    <groups>
    </groups>
    <test started-at="2020-10-18T09:58:50 EDT" name="Test" finished-at="2020-10-18T09:59:00 EDT" duration-ms="10506">
      <class name="com.testcases.LoginTestcase">
        <test-method is-config="true" signature="startUp()[pri:0, instance:com.testcases.LoginTestcase@3650d4fc]" started-at="2020-10-18T09:58:50 EDT" name="startUp" finished-at="2020-10-18T09:58:57 EDT" duration-ms="6912" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startUp -->
        <test-method signature="login()[pri:0, instance:com.testcases.LoginTestcase@3650d4fc]" started-at="2020-10-18T09:58:57 EDT" name="login" finished-at="2020-10-18T09:58:59 EDT" duration-ms="2514" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy15.sendKeys(Unknown Source)
at com.pages.LoginPage.Login(LoginPage.java:36)
at com.testcases.LoginTestcase.login(LoginTestcase.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="close()[pri:0, instance:com.testcases.LoginTestcase@3650d4fc]" started-at="2020-10-18T09:58:59 EDT" name="close" finished-at="2020-10-18T09:59:00 EDT" duration-ms="945" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- com.testcases.LoginTestcase -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
